name: deploy-to-ec2
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script_stop: true
          script: |
            set -Eeuo pipefail
            trap 'echo "ERROR on line $LINENO"' ERR

            # 1) Docker/Compose 확인 & 설치
            if ! command -v docker >/dev/null 2>&1; then
              echo "[install] docker"
              sudo apt-get update -y
              sudo apt-get install -y ca-certificates curl gnupg
              sudo install -m 0755 -d /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $VERSION_CODENAME) stable" \
                | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
              sudo apt-get update -y
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            fi
            docker --version
            docker compose version

            # 2) 코드 준비
            cd ~
            if [ ! -d app/.git ]; then
              rm -rf app
              # public이면 HTTPS, private이면 deploy key로 SSH URL 사용
              git clone https://github.com/jasmin0202/13th-Session-Back.git app
            fi
            cd app
            git pull

            # 3) 빌드 & 기동
            test -f docker-compose.yml || test -f compose.yml
            docker compose build
            docker compose up -d

            # 4) 확인
            docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'
